{"version":3,"sources":["../../../src/plugins/ThumbnailGenerator/index.js"],"names":["Plugin","require","Utils","module","exports","uppy","opts","type","id","title","queue","queueProcessing","defaultOptions","thumbnailWidth","addToQueue","bind","createThumbnail","file","targetWidth","originalUrl","URL","createObjectURL","data","onload","resolve","reject","image","Image","src","revokeObjectURL","onerror","Error","then","targetHeight","getProportionalHeight","canvas","resizeImage","canvasToBlob","blob","sourceWidth","width","sourceHeight","height","steps","Math","floor","log","stepScaled","downScaleInSteps","document","createElement","context","getContext","drawImage","source","currentWidth","currentHeight","i","quality","toBlob","dataURItoBlob","toDataURL","img","aspect","round","setPreviewURL","fileID","preview","files","state","setState","item","push","processQueue","length","current","shift","requestThumbnail","catch","isPreviewSupported","isRemote","console","warn","err","stack","message","install","on","uninstall","off"],"mappings":"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","file":"index.js","sourcesContent":["const Plugin = require('../../core/Plugin')\nconst Utils = require('../../core/Utils')\n/**\n * The Thumbnail Generator plugin\n *\n */\n\nmodule.exports = class ThumbnailGenerator extends Plugin {\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.type = 'thumbnail'\n    this.id = 'ThumbnailGenerator'\n    this.title = 'Thumbnail Generator'\n    this.queue = []\n    this.queueProcessing = false\n\n    const defaultOptions = {\n      thumbnailWidth: 200\n    }\n\n    this.opts = Object.assign({}, defaultOptions, opts)\n\n    this.addToQueue = this.addToQueue.bind(this)\n  }\n\n  /**\n   * Create a thumbnail for the given Uppy file object.\n   *\n   * @param {{data: Blob}} file\n   * @param {number} width\n   * @return {Promise}\n   */\n  createThumbnail (file, targetWidth) {\n    const originalUrl = URL.createObjectURL(file.data)\n    const onload = new Promise((resolve, reject) => {\n      const image = new Image()\n      image.src = originalUrl\n      image.onload = () => {\n        URL.revokeObjectURL(originalUrl)\n        resolve(image)\n      }\n      image.onerror = () => {\n        // The onerror event is totally useless unfortunately, as far as I know\n        URL.revokeObjectURL(originalUrl)\n        reject(new Error('Could not create thumbnail'))\n      }\n    })\n\n    return onload\n      .then(image => {\n        const targetHeight = this.getProportionalHeight(image, targetWidth)\n        const canvas = this.resizeImage(image, targetWidth, targetHeight)\n        return this.canvasToBlob(canvas, 'image/png')\n      })\n      .then(blob => {\n        return URL.createObjectURL(blob)\n      })\n  }\n\n  /**\n   * Resize an image to the target `width` and `height`.\n   *\n   * Returns a Canvas with the resized image on it.\n   */\n  resizeImage (image, targetWidth, targetHeight) {\n    let sourceWidth = image.width\n    let sourceHeight = image.height\n\n    if (targetHeight < image.height / 2) {\n      const steps = Math.floor(\n        Math.log(image.width / targetWidth) / Math.log(2)\n      )\n      const stepScaled = this.downScaleInSteps(image, steps)\n      image = stepScaled.image\n      sourceWidth = stepScaled.sourceWidth\n      sourceHeight = stepScaled.sourceHeight\n    }\n\n    const canvas = document.createElement('canvas')\n    canvas.width = targetWidth\n    canvas.height = targetHeight\n\n    const context = canvas.getContext('2d')\n    context.drawImage(\n      image,\n      0,\n      0,\n      sourceWidth,\n      sourceHeight,\n      0,\n      0,\n      targetWidth,\n      targetHeight\n    )\n    return canvas\n  }\n\n  /**\n   * Downscale an image by 50% `steps` times.\n   */\n  downScaleInSteps (image, steps) {\n    let source = image\n    let currentWidth = source.width\n    let currentHeight = source.height\n\n    for (let i = 0; i < steps; i += 1) {\n      const canvas = document.createElement('canvas')\n      const context = canvas.getContext('2d')\n      canvas.width = currentWidth / 2\n      canvas.height = currentHeight / 2\n      context.drawImage(\n        source,\n        // The entire source image. We pass width and height here,\n        // because we reuse this canvas, and should only scale down\n        // the part of the canvas that contains the previous scale step.\n        0,\n        0,\n        currentWidth,\n        currentHeight,\n        // Draw to 50% size\n        0,\n        0,\n        currentWidth / 2,\n        currentHeight / 2\n      )\n      currentWidth /= 2\n      currentHeight /= 2\n      source = canvas\n    }\n\n    return {\n      image: source,\n      sourceWidth: currentWidth,\n      sourceHeight: currentHeight\n    }\n  }\n\n  /**\n   * Save a <canvas> element's content to a Blob object.\n   *\n   * @param {HTMLCanvasElement} canvas\n   * @return {Promise}\n   */\n  canvasToBlob (canvas, type, quality) {\n    if (canvas.toBlob) {\n      return new Promise(resolve => {\n        canvas.toBlob(resolve, type, quality)\n      })\n    }\n    return Promise.resolve().then(() => {\n      return Utils.dataURItoBlob(canvas.toDataURL(type, quality), {})\n    })\n  }\n\n  getProportionalHeight (img, width) {\n    const aspect = img.width / img.height\n    return Math.round(width / aspect)\n  }\n\n  /**\n   * Set the preview URL for a file.\n   */\n  setPreviewURL (fileID, preview) {\n    const { files } = this.uppy.state\n    this.uppy.setState({\n      files: Object.assign({}, files, {\n        [fileID]: Object.assign({}, files[fileID], {\n          preview: preview\n        })\n      })\n    })\n  }\n\n  addToQueue (item) {\n    this.queue.push(item)\n    if (this.queueProcessing === false) {\n      this.processQueue()\n    }\n  }\n\n  processQueue () {\n    this.queueProcessing = true\n    if (this.queue.length > 0) {\n      const current = this.queue.shift()\n      return this.requestThumbnail(current)\n        .catch(err => {}) // eslint-disable-line handle-callback-err\n        .then(() => this.processQueue())\n    } else {\n      this.queueProcessing = false\n    }\n  }\n\n  requestThumbnail (file) {\n    if (Utils.isPreviewSupported(file.type) && !file.isRemote) {\n      return this.createThumbnail(file, this.opts.thumbnailWidth)\n        .then(preview => {\n          this.setPreviewURL(file.id, preview)\n        })\n        .catch(err => {\n          console.warn(err.stack || err.message)\n        })\n    }\n    return Promise.resolve()\n  }\n\n  install () {\n    this.uppy.on('file-added', this.addToQueue)\n  }\n  uninstall () {\n    this.uppy.off('file-added', this.addToQueue)\n  }\n}\n"]}